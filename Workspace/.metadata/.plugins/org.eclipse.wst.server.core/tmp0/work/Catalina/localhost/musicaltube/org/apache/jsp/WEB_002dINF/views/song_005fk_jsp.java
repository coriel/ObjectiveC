/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2016-02-15 07:26:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class song_005fk_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/views/footer.jsp", Long.valueOf(1455498865000L));
    _jspx_dependants.put("/WEB-INF/views/menu.jsp", Long.valueOf(1455521020000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"http://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.css\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/list.css?<?=time()?>\"/>\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-1.11.3.min.js\"></script>\r\n");
      out.write("<script src=\"http://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.js\"></script>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div data-role=\"page\" id=\"pageone\">\r\n");
      out.write("\t\t ");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("  <div data-role=\"panel\" id=\"myPanel\" width=\"100px\"> \n");
      out.write("   \n");
      out.write("    <ul data-role=\"listview\" data-inset=\"true\" data-theme=\"a\" data-divider-theme=\"b\">\n");
      out.write("\t<li data-role=\"list-divider\">노래방책</li>\n");
      out.write("\t<li><a href=\"song_t\">태진</a></li>\n");
      out.write("\t<li><a href=\"song_k\">금영</a></li>\n");
      out.write("\t<li data-role=\"list-divider\">공연실황</li>\n");
      out.write("\t<li><a href=\"#\">한글자막</a></li>\n");
      out.write("\t<li><a href=\"#\">한국어</a></li>\n");
      out.write("\t<li><a href=\"#\">외국어</a></li>\n");
      out.write("</ul>\n");
      out.write("  </div> \n");
      out.write("  \n");
      out.write("  \n");
      out.write("  \n");
      out.write("  \n");
      out.write("</body>\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<div data-role=\"header\">\r\n");
      out.write("\t\t\t<a href=\"#myPanel\"\r\n");
      out.write("\t\t\t\tclass=\"ui-btn ui-shadow ui-corner-all ui-icon-bars ui-btn-icon-notext\">Open\r\n");
      out.write("\t\t\t\tPanel</a>\r\n");
      out.write("\t\t\t<h1>뮤지컬 노래방 <태진></h1>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div data-role=\"main\" class=\"ui-content\">\r\n");
      out.write("\t\t\t<ul data-role=\"listview\" data-autodividers=\"true\" data-filter=\"true\">\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅁ</font>모차르트 | <b>나는 나는 음악</b> | 임태경 <span class=\"ui-li-count\">37429</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅁ</font>모차르트 | <b>내 운명 피하고 싶어</b> | 박은태 <span class=\"ui-li-count\">32300</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅁ</font>몬테 크리스토 | <b>언제나 그대 곁에</b> | 신성록,옥주현<span class=\"ui-li-count\">32813</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅎ</font>헤드윅 | <b>Sugar Daddy</b> | 김다현<span class=\"ui-li-count\">31516</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅎ</font>헤드윅 | <b>The Origin Of Love</b> | 오만석<span class=\"ui-li-count\">30747</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅈ</font>지킬 앤 하이드 | <b>A New Life</b> | 최정원<span class=\"ui-li-count\">16727</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅈ</font>지킬 앤 하이드 | <b>지금 이 순간</b> | 조승우<span class=\"ui-li-count\">16364</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅇ</font>위대한 캣츠비 | <b>6년과 2개월</b> | 정인지,곽선영<span class=\"ui-li-count\">18244</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅇ</font>위대한 캣츠비 | <b>세상의 전부</b> | 김태훈,사희<span class=\"ui-li-count\">17470</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅅ</font>신밧드 | <b>한 순간도</b> | 강성<span class=\"ui-li-count\">12111</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㄴ</font>노트르담 드 파리 | <b>아름답다(Belle)</b> | 윤형렬,서범석,김성민<span class=\"ui-li-count\">31407</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㄴ</font>노트르담 드 파리 | <b>대성당들의 시대 </b> | 박은태<span class=\"ui-li-count\">30810</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㄴ</font>노트르담 드 파리 | <b>춤을춰요,나의 에스메랄다</b> | 윤형렬<span class=\"ui-li-count\">30825</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅁ</font>모차르트 | <b>황금별</b> | 신영숙<span class=\"ui-li-count\">37757</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅁ</font>몬테크리스토  | <b>너희에게선사하는지옥</b> | 엄기준<span class=\"ui-li-count\">37736</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅁ</font>몬테크리스토  | <b>사랑이진실할때 </b> | 엄기준,옥주현<span class=\"ui-li-count\">37731</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅅ</font>싱글즈 | 담배<b></b> | 정준<span class=\"ui-li-count\">37762</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅈ</font>지저스 크라이스트 수퍼스타 | <b>겟세마네(I Only Want To Say)</b> | 박은태<span class=\"ui-li-count\">37729</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅈ</font>지저스 크라이스트 수퍼스타 | <b>마음속의천국(Heaven On Their Minds)</b> | 윤도현<span class=\"ui-li-count\">37697</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅊ</font>천국의 눈물  | <b>Can You Hear Me?</b> | 양파<span class=\"ui-li-count\">33487</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㄱ</font>그리스 | <b>Summer Nights</b> | <span class=\"ui-li-count\">7459</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㄹ</font>레미제라블 | <b>On My Own</b> | Samantha Barks<span class=\"ui-li-count\">22452</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅁ</font>맨 오브 라 만차  | <b>Impossible Dream</b> | Matt Monro <span class=\"ui-li-count\">21718</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅁ</font>미녀와 야수 | <b>Beauty and the beast</b> | Celine Dion<span class=\"ui-li-count\">7445</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅇ</font>알라딘 | <b>A whole new world(Aladdin)</b> | Regina and Peabo Bryson<span class=\"ui-li-count\">7719</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅇ</font>오페라의 유령 | <b>All I ask of you</b> | Sarah Brightman<span class=\"ui-li-count\">21425</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅇ</font>오페라의 유령 | <b>The phantom of the opera</b> | Sarah Brightman<span class=\"ui-li-count\">20294</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅇ</font>오페라의 유령 | <b>Think of Me</b> | Emmy Rossum<span class=\"ui-li-count\">21221</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅈ</font>지킬앤하이드 | <b>Once upon a dream</b> | Linda Eder<span class=\"ui-li-count\">20405</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅋ</font>캣츠 | <b>Memory</b> | Barbra Streisand<span class=\"ui-li-count\">20396</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅎ</font>하이스쿨뮤지컬 | <b>Breaking Free</b> | <span class=\"ui-li-count\">21475</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅎ</font>헤드윅 | <b>Midnight radio</b> | John Cameron Mitchell & Cheater<span class=\"ui-li-count\">21254</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅎ</font>헤드윅 | <b>Wig in a box</b> | John Cameron Mitchell & Cheater<span class=\"ui-li-count\">20985</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅎ</font>헤드윅 | <b>Wicked little town</b> | Tommy Gnosis ver.<span class=\"ui-li-count\">21132</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㅇ</font>아가사 | <b>라비린토스</b> | 배해선,박한근<span class=\"ui-li-count\">45569</span></li>\r\n");
      out.write("\t\t\t\t<li><font color=\"white\">ㄹ</font>레베카 | <b>레베카</b> | 신영숙,옥주현,임혜영<span class=\"ui-li-count\">45471</span></li>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div data-role=\"footer\">\r\n");
      out.write("\t\t\t");
      out.write("\t\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<p align=\"center\"><font size=\"2\">Since 2016. © Mureka</font></p>\n");
      out.write("</body>\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
